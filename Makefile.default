# Installation shortcuts: change the following and type "make install"

# For Linux (expects "make DESTDIR=xxx PREFIX=yyy install"):
DESTDIR = /usr
PREFIX = .
DEST = ${DESTDIR}/${PREFIX}/bin

MANDIR = /usr/share/man/man1
DOCDIR = /usr/share/doc/dpic

# For manual installation (uncomment and change as necessary):
# DEST = $${HOME}/bin

#-----------------------------------------------------------------------

# System-dependent parameters.  These may need tweaking:

# If loading fails because random() and srandom() are not available,
# force the use of rand() and srand() respectively instead by uncommenting
# the following, typing `make clean' and then `make'.
# DEFINEA=-DRAND

# If loading fails because snprintf() is not available, uncomment the
# following, type "make clean", and try again:
# DEFINEB=-DNO_SNPRINTF

# Server operation: Use the -z option or uncomment the following to compile
# with read and write access (sh and copy) to arbitrary files disabled.
# SAFEMODE= -DSAFE_MODE

# For DJGPP compilation:
# DEFINEB=
# CFLAGS= $(DEFINEA) -DNO_SNPRINTF $(SAFEMODE) -mcpu=pentium -march=i386 -O

# MinGW
# LIBS = -liberty

# Ultrix mips
# CFLAGS = $(DEFINEA) $(DEFINEB) $(SAFEMODE) -O -Olimit 1600

# AIX
# CC=xlc

# other.  cc usually works too.
CFLAGS += $(DEFINEA) $(DEFINEB) $(SAFEMODE) -O
CC=gcc

OBJECTS = dpic.o p2clib.o

# Uncomment to compile debug code:
# DEBUG = -e 's/(\*D\([A-Z]\)/(*\1/g' -e 's/\([A-Z]\)D\*)/\1*)/g' \
#    | sed -e 's/(\*D//g' -e 's/D\*)//g'
# OBJECTS = dpic.o p2clib.o sysdep.o

DATE = `date +%Y.%m.%d`

#-----------------------------------------------------------------------

SOURCES = \
 src/dp0.x src/dpic.x src/dpic1.x src/mfp.x \
 src/mpo.x src/pdf.x src/pgf.x src/ps.x src/pst.x src/svg.x \
 src/sysdep.x src/tex.x src/xfig.x \
 src/dpic.bnf

dpic: dpic.c $(OBJECTS)
	$(CC) -o dpic $(OBJECTS) -lm $(LIBS)

LEXCINCLUDES = entryhp.h lxhp.h lxnp.h lxtv.h entrytv.h lxch.h
CMPR = awk '{b=b$$0; if(length(b) > 75){print b; b=""}}; END{print b}'
dpic.c: $(SOURCES)
	(cd src; make DEBUG="$(DEBUG)" DATE=$(DATE) )
	cp src/dpic.c src/parstab.i .
	for name in $(LEXCINCLUDES) ; do \
       $(CMPR) src/$$name > $$name ; done;
	chmod 644 *.c *.i *.h
	if test -n "$(DEBUG)" ; \
      then $(CC) -c src/sysdep.c; fi

install: dpic doc/dpic-doc.pdf
	mkdir -p $(DEST)
	if test -x dpic.exe ; then \
      strip dpic.exe; install dpic.exe $(DEST) ; \
    else \
      strip dpic; install -m 755 dpic $(DEST) ; \
    fi
	mkdir -p $(DOCDIR)
	cp -p doc/dpic-doc.pdf $(DOCDIR)
	mkdir -p $(MANDIR)
	cat doc/dpic.1 | gzip > $(MANDIR)/dpic.1.gz

uninstall:
	rm -f $(DEST)/dpic* $(MANDIR)/dpic.1.gz
	if test `basename $(DOCDIR)` = dpic ; then \
      rm -r $(DOCDIR) ; \
    else rm -f $(DOCDIR)/dpic-doc.pdf ; \
    fi

doc/dpic-doc.pdf:
	(cd doc; make)

#                               Delete compiled files
clean:
	-rm -f *.o dpic dpic.exe *.LOG
	(cd src; make clean )
	(cd doc; if test -f Makefile ; then make clean; fi )

distclean:
	-rm -f *.o dpic dpic.exe *.LOG
	(cd src; make veryclean)
	(cd doc; if test -f Makefile ; then make clean ; fi)
	find . -name \*stackdump -exec rm {} \;

#                               Delete computed files in this and lower folders
veryclean: clean
	find . -name \*stackdump -exec rm {} \;
	rm -f dpic.c lx*.h ent*.h *.i sysdep.c
	(cd src; make veryclean)
	(cd doc; if test -f Makefile ; then make clean ; fi)
	rm -f config.log config.status
